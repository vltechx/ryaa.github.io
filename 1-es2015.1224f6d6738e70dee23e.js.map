{"version":3,"sources":["./src/app/pages/password-change-modal/password-change-modal.page.ts","./src/app/pages/password-change-modal/password-change-modal.page.html"],"names":[],"mappings":"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","file":"1-es2015.1224f6d6738e70dee23e.js","sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport {ModalController, ToastController} from '@ionic/angular';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {EndpointService} from '@services/endpoint/endpoint.service';\nimport {HttpClient} from '@angular/common/http';\nimport {TranslateService} from '@ngx-translate/core';\n\n\nconst CONFIG = {\n  PASSWORD_CHANGE_PATH: '/mobile/v2/userPasswordChange'\n};\n\n@Component({\n  selector: 'app-password-change-modal',\n  templateUrl: './password-change-modal.page.html',\n  styleUrls: ['./password-change-modal.page.scss'],\n})\nexport class PasswordChangeModalPage implements OnInit {\n\n  public passwordChangeForm: FormGroup;\n  public showPassword = false;\n  public confirmAttempt = false;\n\n  public currentPwd = '';\n  public newPwd = '';\n  public repeatedNewPwd = '';\n\n  constructor(private modalCtrl: ModalController,\n              private formBuilder: FormBuilder,\n              private endpointService: EndpointService,\n              private http: HttpClient,\n              private toastCtrl: ToastController,\n              private translateService: TranslateService) {\n    this.prepareForm();\n  }\n\n  ngOnInit() {\n  }\n\n  prepareForm() {\n    this.passwordChangeForm = this.formBuilder.group(\n      {\n        password: ['', [Validators.required]],\n        newPassword: ['', [Validators.required, Validators.minLength(6)]],\n        repeatNewPassword: ['', [Validators.required, Validators.minLength(6)]]\n      },\n      {validator: this.passwordMatchValidator}\n    );\n  }\n\n  async dismiss() {\n    await this.modalCtrl.dismiss();\n  }\n\n  requestPasswordChange() {\n    this.confirmAttempt = true;\n    this.currentPwd = this.passwordChangeForm.get('password').value;\n    this.newPwd = this.passwordChangeForm.get('newPassword').value;\n    this.repeatedNewPwd = this.passwordChangeForm.get('repeatNewPassword').value;\n\n    if (this.currentPwd !== null && this.currentPwd !== '' && (this.newPwd === this.repeatedNewPwd)) {\n      this.changePassword(this.currentPwd, this.newPwd);\n    }\n  }\n\n  togglePasswordFieldView() {\n    this.showPassword = !this.showPassword;\n  }\n\n\n  changePassword(currentPassword: string, newPassword: string) {\n    const url = this.endpointService.currentEndpoint + CONFIG.PASSWORD_CHANGE_PATH;\n    this.http.post(url, {\n      currentPwd: currentPassword,\n      newPwd: newPassword\n    }).subscribe((data) => {\n        this.modalCtrl.dismiss();\n      },\n      async error => {\n        const toast = await this.toastCtrl.create({\n          message: this.translateService.instant('pages.password-change-modal.passwordChangeError'),\n          position: 'bottom',\n          buttons: [{\n            text: this.translateService.instant('actions.ok'),\n            role: 'cancel'\n          }],\n          duration: 3 * 1000,\n        });\n        toast.present();\n      });\n  }\n\n  passwordMatchValidator(frm: FormGroup) {\n    if (frm.get('newPassword').value !== frm.get('repeatNewPassword').value) {\n      return {passwordMismatch: true};\n    }\n  }\n}\n","<ion-header>\n  <ion-toolbar>\n    <ion-title style=\"font-size: inherit\">\n      {{'pages.password-change-modal.changePassword' | translate}}\n    </ion-title>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"dismiss()\" class=\"text-xxlarge\">\n        <fa-icon [icon]=\"['fal', 'times']\"></fa-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n<ion-content>\n  <ion-card>\n    <form [formGroup]=\"passwordChangeForm\">\n      <ion-item\n        [class.invalid]=\"!passwordChangeForm.controls.password.valid && (passwordChangeForm.controls.password.dirty || confirmAttempt)\">\n        <ion-input formControlName=\"password\" [ngClass]=\"{'see-password': !showPassword}\"\n                   placeholder=\"{{'pages.password-change-modal.enterCurrentPassword' | translate}}\"\n                   clearOnEdit=\"false\"></ion-input>\n        <ion-button fill=\"clear\" type=\"button\" item-right icon-only (click)=\"togglePasswordFieldView()\">\n          <fa-icon [icon]=\"showPassword == false ? ['fas', 'eye-slash'] : ['fas', 'eye']\"></fa-icon>\n        </ion-button>\n      </ion-item>\n\n      <ion-item\n        [class.invalid]=\"!passwordChangeForm.controls.newPassword.valid && (passwordChangeForm.controls.newPassword.dirty || confirmAttempt)\">\n        <ion-input formControlName=\"newPassword\" [ngClass]=\"{'see-password': !showPassword}\"\n                   placeholder=\"{{'pages.password-change-modal.enterNewPassword' | translate}}\"\n                   clearOnEdit=\"false\"></ion-input>\n      </ion-item>\n\n      <ion-item\n        [class.invalid]=\"!passwordChangeForm.controls.repeatNewPassword.valid && (passwordChangeForm.controls.repeatNewPassword.dirty || confirmAttempt)\">\n        <ion-input formControlName=\"repeatNewPassword\" [ngClass]=\"{'see-password': !showPassword}\"\n                   placeholder=\"{{'pages.password-change-modal.repeatNewPassword' | translate}}\"\n                   clearOnEdit=\"false\"></ion-input>\n      </ion-item>\n\n\n      <ion-item *ngIf=\"confirmAttempt && newPwd.length < 6\" lines=\"none\" style=\"white-space: normal\"\n                class=\"ion-text-center\">\n        <ion-label color=\"danger\">{{'pages.password-change-modal.passwordLengthWarning' | translate}}</ion-label>\n      </ion-item>\n\n\n      <ion-item *ngIf=\"confirmAttempt && passwordChangeForm.errors?.passwordMismatch\" lines=\"none\"\n                style=\"white-space: normal\"\n                class=\"ion-text-center\">\n        <ion-label color=\"danger\">{{'pages.password-change-modal.passwordNotMatching' | translate}}</ion-label>\n      </ion-item>\n\n      <ion-button (click)=\"requestPasswordChange()\" style=\"display: flex\">\n        {{'pages.password-change-modal.changePassword' | translate}}\n      </ion-button>\n    </form>\n\n  </ion-card>\n</ion-content>\n"],"sourceRoot":"webpack:///"}