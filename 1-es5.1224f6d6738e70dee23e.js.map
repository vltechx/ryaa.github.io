{"version":3,"sources":["webpack:///src/app/pages/password-change-modal/password-change-modal.page.html","webpack:///src/app/pages/password-change-modal/password-change-modal.page.ts"],"names":["CONFIG","PASSWORD_CHANGE_PATH","PasswordChangeModalPage","modalCtrl","formBuilder","endpointService","http","toastCtrl","translateService","showPassword","confirmAttempt","currentPwd","newPwd","repeatedNewPwd","prepareForm","passwordChangeForm","group","password","required","newPassword","minLength","repeatNewPassword","validator","passwordMatchValidator","dismiss","get","value","changePassword","currentPassword","url","currentEndpoint","post","subscribe","data","error","create","message","instant","position","buttons","text","role","duration","toast","present","frm","passwordMismatch","togglePasswordFieldView","requestPasswordChange"],"mappings":"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","file":"1-es5.1224f6d6738e70dee23e.js","sourcesContent":["<ion-header>\n  <ion-toolbar>\n    <ion-title style=\"font-size: inherit\">\n      {{'pages.password-change-modal.changePassword' | translate}}\n    </ion-title>\n    <ion-buttons slot=\"end\">\n      <ion-button (click)=\"dismiss()\" class=\"text-xxlarge\">\n        <fa-icon [icon]=\"['fal', 'times']\"></fa-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n<ion-content>\n  <ion-card>\n    <form [formGroup]=\"passwordChangeForm\">\n      <ion-item\n        [class.invalid]=\"!passwordChangeForm.controls.password.valid && (passwordChangeForm.controls.password.dirty || confirmAttempt)\">\n        <ion-input formControlName=\"password\" [ngClass]=\"{'see-password': !showPassword}\"\n                   placeholder=\"{{'pages.password-change-modal.enterCurrentPassword' | translate}}\"\n                   clearOnEdit=\"false\"></ion-input>\n        <ion-button fill=\"clear\" type=\"button\" item-right icon-only (click)=\"togglePasswordFieldView()\">\n          <fa-icon [icon]=\"showPassword == false ? ['fas', 'eye-slash'] : ['fas', 'eye']\"></fa-icon>\n        </ion-button>\n      </ion-item>\n\n      <ion-item\n        [class.invalid]=\"!passwordChangeForm.controls.newPassword.valid && (passwordChangeForm.controls.newPassword.dirty || confirmAttempt)\">\n        <ion-input formControlName=\"newPassword\" [ngClass]=\"{'see-password': !showPassword}\"\n                   placeholder=\"{{'pages.password-change-modal.enterNewPassword' | translate}}\"\n                   clearOnEdit=\"false\"></ion-input>\n      </ion-item>\n\n      <ion-item\n        [class.invalid]=\"!passwordChangeForm.controls.repeatNewPassword.valid && (passwordChangeForm.controls.repeatNewPassword.dirty || confirmAttempt)\">\n        <ion-input formControlName=\"repeatNewPassword\" [ngClass]=\"{'see-password': !showPassword}\"\n                   placeholder=\"{{'pages.password-change-modal.repeatNewPassword' | translate}}\"\n                   clearOnEdit=\"false\"></ion-input>\n      </ion-item>\n\n\n      <ion-item *ngIf=\"confirmAttempt && newPwd.length < 6\" lines=\"none\" style=\"white-space: normal\"\n                class=\"ion-text-center\">\n        <ion-label color=\"danger\">{{'pages.password-change-modal.passwordLengthWarning' | translate}}</ion-label>\n      </ion-item>\n\n\n      <ion-item *ngIf=\"confirmAttempt && passwordChangeForm.errors?.passwordMismatch\" lines=\"none\"\n                style=\"white-space: normal\"\n                class=\"ion-text-center\">\n        <ion-label color=\"danger\">{{'pages.password-change-modal.passwordNotMatching' | translate}}</ion-label>\n      </ion-item>\n\n      <ion-button (click)=\"requestPasswordChange()\" style=\"display: flex\">\n        {{'pages.password-change-modal.changePassword' | translate}}\n      </ion-button>\n    </form>\n\n  </ion-card>\n</ion-content>\n","import {Component, OnInit} from '@angular/core';\nimport {ModalController, ToastController} from '@ionic/angular';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {EndpointService} from '@services/endpoint/endpoint.service';\nimport {HttpClient} from '@angular/common/http';\nimport {TranslateService} from '@ngx-translate/core';\n\n\nconst CONFIG = {\n  PASSWORD_CHANGE_PATH: '/mobile/v2/userPasswordChange'\n};\n\n@Component({\n  selector: 'app-password-change-modal',\n  templateUrl: './password-change-modal.page.html',\n  styleUrls: ['./password-change-modal.page.scss'],\n})\nexport class PasswordChangeModalPage implements OnInit {\n\n  public passwordChangeForm: FormGroup;\n  public showPassword = false;\n  public confirmAttempt = false;\n\n  public currentPwd = '';\n  public newPwd = '';\n  public repeatedNewPwd = '';\n\n  constructor(private modalCtrl: ModalController,\n              private formBuilder: FormBuilder,\n              private endpointService: EndpointService,\n              private http: HttpClient,\n              private toastCtrl: ToastController,\n              private translateService: TranslateService) {\n    this.prepareForm();\n  }\n\n  ngOnInit() {\n  }\n\n  prepareForm() {\n    this.passwordChangeForm = this.formBuilder.group(\n      {\n        password: ['', [Validators.required]],\n        newPassword: ['', [Validators.required, Validators.minLength(6)]],\n        repeatNewPassword: ['', [Validators.required, Validators.minLength(6)]]\n      },\n      {validator: this.passwordMatchValidator}\n    );\n  }\n\n  async dismiss() {\n    await this.modalCtrl.dismiss();\n  }\n\n  requestPasswordChange() {\n    this.confirmAttempt = true;\n    this.currentPwd = this.passwordChangeForm.get('password').value;\n    this.newPwd = this.passwordChangeForm.get('newPassword').value;\n    this.repeatedNewPwd = this.passwordChangeForm.get('repeatNewPassword').value;\n\n    if (this.currentPwd !== null && this.currentPwd !== '' && (this.newPwd === this.repeatedNewPwd)) {\n      this.changePassword(this.currentPwd, this.newPwd);\n    }\n  }\n\n  togglePasswordFieldView() {\n    this.showPassword = !this.showPassword;\n  }\n\n\n  changePassword(currentPassword: string, newPassword: string) {\n    const url = this.endpointService.currentEndpoint + CONFIG.PASSWORD_CHANGE_PATH;\n    this.http.post(url, {\n      currentPwd: currentPassword,\n      newPwd: newPassword\n    }).subscribe((data) => {\n        this.modalCtrl.dismiss();\n      },\n      async error => {\n        const toast = await this.toastCtrl.create({\n          message: this.translateService.instant('pages.password-change-modal.passwordChangeError'),\n          position: 'bottom',\n          buttons: [{\n            text: this.translateService.instant('actions.ok'),\n            role: 'cancel'\n          }],\n          duration: 3 * 1000,\n        });\n        toast.present();\n      });\n  }\n\n  passwordMatchValidator(frm: FormGroup) {\n    if (frm.get('newPassword').value !== frm.get('repeatNewPassword').value) {\n      return {passwordMismatch: true};\n    }\n  }\n}\n"]}