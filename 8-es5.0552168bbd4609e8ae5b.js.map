{"version":3,"sources":["webpack:///src/app/pages/order-history/order-history.module.ts","webpack:///src/app/pages/order-history/order-history.page.html","webpack:///src/app/pages/order-history/order-history.page.ts"],"names":["routes","path","component","OrderHistoryPageModule","forChild","CONFIG","GA","PAGE_NAME","OrderHistoryPage","modalCtrl","orderService","loadingCtrl","orderSyncService","log","mobileContextService","ga","datePipe","allOrders","orderGroups","activeOrders","deliveryDate","format","daysInThePast","minDate","subtract","maxDate","add","userSettings","unsubscribe","displayFormat","datePickerDisplayFormat","dateType","dateOnly","datePickerType","showGroupHeader","record","recordIndex","records","order","tenantName","group","find","value","name","e","sendPaymentUpdate","subscribe","orderChange","orderView","oV","id","uuid","userSettingsObservable","pipe","trackView","error","info","getOrders","loading","create","then","res","present","getDatedOrders","haulerObservable","orders","hauler","forEach","push","constructOrderView","sortOrders","manageGroups","canHaulerSeeFutureOrder","dismiss","err","index","toString","groupName","orderGroup","oG","hidden","filter","concat","visible","datePicker","open","event","componentProps","isforHistory","itemModal","onDidDismiss","eventDetail","data","transition","view","local","status","to","prop","result","ordersSorted","reduce","groups","item","val","Object","keys","provider","linkedProviders","p","canSeeFutureOrders","isAfter","configuration","allowFutureViewForHauler","canHaulerSeeFutureOrders","toggleGroupView","some","transform","hourFormat","dateFormat","next","complete","changeDisplayFormat"],"mappings":"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","file":"8-es5.0552168bbd4609e8ae5b.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {Routes} from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\n\nimport { OrderHistoryPage } from './order-history.page';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {ComponentsModule} from '@app/components/components.module';\nimport {PipesModule} from '@app/pipes/pipes.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrderHistoryPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    TranslateModule,\n    ComponentsModule,\n    PipesModule,\n  ],\n  declarations: [OrderHistoryPage]\n})\nexport class OrderHistoryPageModule {}\n","<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-menu-button>\n        <img src=\"assets/images/logo_menu.png\"/>\n      </ion-menu-button>\n    </ion-buttons>\n    <ion-title\n      class=\"delivery-date\">{{ displayFormat | DatePipe: userSettings.hourFormat:userSettings.dateFormat:dateType}}</ion-title>\n    <ion-buttons slot=\"end\">\n      <ion-button slot=\"icon-only\" (click)=\"getOrders(deliveryDate)\">\n        <fa-icon [icon]=\"['fas', 'sync']\" size=\"lg\" slot=\"end\"></fa-icon>\n      </ion-button>\n      <ion-button *ngIf=\"isDatePickerVisible()\" slot=\"icon-only\" (click)=\"showTimePicker()\">\n        <fa-icon [icon]=\"['fal', 'calendar']\" size=\"lg\"></fa-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-datetime\n    [cancelText]=\"'actions.cancel' | translate\" [doneText]=\"'actions.accept' | translate\"\n    #datePicker [min]=\"minDate\" [max]=\"maxDate\"\n    [displayFormat]=\"datePickerDisplayFormat | DatePipe:userSettings.hourFormat:userSettings.dateFormat:null:datePickerType:true\"\n    [(ngModel)]=\"deliveryDate\" (ngModelChange)=\"changeDisplayFormat(deliveryDate)\" (ionChange)=\"getOrders(deliveryDate)\"\n    hidden>\n  </ion-datetime>\n  <ion-virtual-scroll #itemList [items]=\"activeOrders\" [trackBy]=\"identify\" [headerFn]=\"showGroupHeader\"\n                      [approxItemHeight]=\"'76px'\" bufferRatio=\"6\">\n    <ion-item-divider *virtualHeader=\"let group\" class=\"item-ios-with-padding group-item-divider\"\n                      [ngClass]=\"group.viewClass\">\n      <ion-label>\n        <ion-badge color=\"primary\">{{ group.size }}</ion-badge>&nbsp;\n        <span [translate]=\"group.name\"></span>\n      </ion-label>\n\n      <ion-toggle slot=\"end\" [(ngModel)]=\"group.visible\" (ngModelChange)=\"toggleGroupView(group.name)\"></ion-toggle>\n    </ion-item-divider>\n    <ion-item *virtualItem=\"let orderItem; let i = index\" (click)=\"selectItem($event, orderItem)\"\n              class=\"item-no-padding ion-text-wrap\">\n      <order-item class=\"order-item-fill\"  [orderView]=\"orderItem\" [index]=\"i\" [isforHistory]=\"true\"></order-item>\n    </ion-item>\n  </ion-virtual-scroll>\n  <ion-item-group *ngIf=\"(!activeOrders || activeOrders.length < 1)\"\n                  class=\"italic text-muted ion-padding\">\n    <ion-item lines=\"none\">\n      <ion-label class=\"text-center\">{{ 'messages.empty_list' | translate }}</ion-label>\n    </ion-item>\n  </ion-item-group>\n  <!-- barre pour permettre de réafficher un groupe -->\n  <ion-list>\n    <ion-item-divider *ngFor=\"let hiddenGroup of orderGroups\" [hidden]=\"!hiddenGroup.hidden\"\n                      class=\"item-ios-with-padding group-item-divider\" [ngClass]=\"hiddenGroup.viewClass\">\n      <ion-label>\n        <ion-badge *ngIf=\"hiddenGroup.canHaulerSeeFutureOrders\" color=\"primary\">{{ hiddenGroup.size }}</ion-badge>\n        <span [translate]=\"hiddenGroup.name\"></span> &nbsp;\n        <span class=\"future-order-not-allowed-message\" *ngIf=\"!hiddenGroup.canHaulerSeeFutureOrders\"\n              [translate]=\"'messages.not_allowed_to_see_future_orders'\"></span>\n      </ion-label>\n      <ion-toggle *ngIf=\"hiddenGroup.canHaulerSeeFutureOrders\" [(ngModel)]=\"hiddenGroup.visible\"\n                  (ngModelChange)=\"toggleGroupView(hiddenGroup.name)\"></ion-toggle>\n    </ion-item-divider>\n  </ion-list>\n\n</ion-content>\n","import {ViewChild} from '@angular/core';\nimport {Component} from '@angular/core';\nimport {Hauler} from '@models/business/hauler.model';\nimport {Order} from '@models/business/order.model';\nimport {OrderGroup} from '@models/order-helper/order-group.model';\nimport {OrderView} from '@models/order-helper/order-view.model';\nimport {UserSettings} from '@models/settings/settings.model';\nimport {DateTimeCombinationEnum} from '@models/units-and-format/date-format.enum';\nimport {OrderDetailTabsPage} from '@app/pages/order-detail-tabs/order-detail-tabs.page';\nimport {DatePipe} from '@app/pipes/date-pipe/date.pipe';\nimport {LoadingController} from '@ionic/angular';\nimport {ModalController} from '@ionic/angular';\nimport {IonDatetime} from '@ionic/angular';\nimport {Transition} from '@models/workflow/transition.model';\nimport {MblsAnalyticsService} from '@services/mbls-analytics-service/MblsAnalyticsService';\nimport {LogService} from '@services/log/log.service';\nimport {MobileContextService} from '@services/mobile-configuration-service/mobile-context.service';\nimport {OrderService} from '@services/order-service/order.service';\nimport {OrderSyncService} from '@services/order-sync/order-sync.service';\nimport * as moment from 'moment';\nimport {Subject} from 'rxjs';\nimport {combineLatest} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nconst CONFIG = {\n  GA: {\n    PAGE_NAME: 'OrderHistoryPage',\n  }\n};\n\n@Component({\n  selector: 'app-order-history',\n  templateUrl: './order-history.page.html',\n  styleUrls: ['./order-history.page.scss'],\n})\nexport class OrderHistoryPage {\n\n  @ViewChild('datePicker', {static: true})\n  public datePicker: IonDatetime;\n  public allOrders: Array<OrderView> = [];\n  public hauler: Hauler;\n  public orderGroups: Array<OrderGroup> = [];\n  public activeOrders: Array<OrderView> = [];\n  public deliveryDate: string = moment().format('YYYY-MM-DD');\n  public daysInThePast = 0;\n  public minDate: string = moment().subtract(this.daysInThePast, 'd').format('YYYY-MM-DD');\n  public maxDate: string = moment().add(365, 'd').format('YYYY-MM-DD');\n  protected _component: OrderHistoryPage;\n  private loading: any;\n  userSettings: UserSettings = new UserSettings();\n  private unsubscribe: Subject<void> = new Subject<void>();\n  public displayFormat: string = moment().format('YYYY-MM-DD');\n  public datePickerDisplayFormat = 'YYYY/MM/DD';\n  dateType: DateTimeCombinationEnum = DateTimeCombinationEnum.dateOnly;\n  datePickerType = true;\n\n  constructor(private modalCtrl: ModalController,\n              private orderService: OrderService,\n              private loadingCtrl: LoadingController,\n              private orderSyncService: OrderSyncService,\n              private log: LogService,\n              private mobileContextService: MobileContextService,\n              private ga: MblsAnalyticsService,\n              private datePipe: DatePipe,\n  ) {\n    this.orderSyncService.sendPaymentUpdate().subscribe(orderChange => {\n      if (orderChange as Order) {\n        const orderView = this.activeOrders.find(oV => oV.order.id === orderChange.id);\n        if (orderView) {\n          orderChange.uuid = orderView.order.uuid;\n          orderView.order = orderChange;\n        }\n      }\n    });\n\n    this.mobileContextService.userSettingsObservable\n      .pipe(\n        takeUntil(this.unsubscribe)\n      )\n      .subscribe((userSettings) => {\n        this.userSettings = userSettings;\n      });\n  }\n\n  // noinspection JSUnusedGlobalSymbols\n  ionViewDidEnter() {\n    this.ga.trackView(CONFIG.GA.PAGE_NAME).catch(error => this.log.info(`Unable to track view ${CONFIG.GA.PAGE_NAME} with GA`, error));\n    this.getOrders(this.deliveryDate);\n  }\n\n  /***\n   * get orders by their delivery dates\n   */\n  getOrders(deliveryDate: string) {\n    this.loading = this.loadingCtrl.create()\n      .then(async (res) => {\n          await res.present();\n          combineLatest([\n            this.orderSyncService.getDatedOrders(moment(deliveryDate).format('YYYY-MM-DD')),\n            this.mobileContextService.haulerObservable\n          ])\n            .subscribe(([orders, hauler]) => {\n                this.allOrders = [];\n                this.orderGroups = [];\n                this.activeOrders = [];\n                orders.forEach(order => {\n                  this.allOrders.push(this.orderService.constructOrderView(order));\n                });\n                this.hauler = hauler;\n                this.activeOrders = this.sortOrders(this.allOrders, 'tenantName');\n                this.manageGroups(this.allOrders);\n                this.canHaulerSeeFutureOrder();\n                res.dismiss();\n              }, err => {\n                res.dismiss();\n                this.log.error(err);\n              }\n            );\n        }\n      );\n  }\n\n  showGroupHeader = (record: OrderView, recordIndex: number, records: Array<OrderView>) => {\n    try {\n      if (recordIndex === 0 || (record.order.tenantName !== records[recordIndex - 1].order.tenantName)) {\n        if (this.orderGroups) {\n          const group = this.orderGroups.find(value => value.name === record.order.tenantName);\n          if (group) {\n            return group;\n          }\n        }\n      }\n    } catch (e) {\n\n    }\n\n    return null;\n  }\n\n  identify(index, orderView: OrderView) {\n    return orderView.order.uuid.toString();\n  }\n\n  toggleGroupView(groupName: string) {\n    const orderGroup = this.orderGroups.find(oG => oG.name === groupName);\n    if (orderGroup) {\n      if (orderGroup.hidden) {\n        this.activeOrders = this.activeOrders.filter(orderView => orderView.order.tenantName !== groupName);\n      } else {\n        this.activeOrders = this.activeOrders.concat(this.allOrders.filter(orderView => orderView.order.tenantName === groupName));\n      }\n      orderGroup.hidden = !orderGroup.hidden;\n      orderGroup.visible = !orderGroup.visible;\n    }\n  }\n\n  showTimePicker() {\n    this.datePicker.open();\n  }\n\n  async selectItem(event, orderView) {\n    const itemModal = await this.modalCtrl.create({\n      id: 'order-detail-tabs-page',\n      component: OrderDetailTabsPage,\n      componentProps: {\n        orderView: orderView,\n        isforHistory: true\n      }\n    });\n    itemModal.present();\n    itemModal.onDidDismiss().then(\n      // (data: { order: Order }) => {\n      (eventDetail) => {\n        if (eventDetail && eventDetail.data && eventDetail.data.order) {\n          const transition: Transition = eventDetail.data.transition;\n          const view = this.allOrders.find(oV => oV.order.id === eventDetail.data.order.id);\n          if (view && transition) {\n            view.order.local = false;\n            view.order.status = transition.to.name;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Sort orders\n   *\n   */\n  sortOrders(orders: Array<OrderView>, prop: string): Array<OrderView> {\n    const result = [];\n    const ordersSorted = orders.reduce((groups, item) => {\n      const val = item.order[prop];\n      groups[val] = groups[val] || [];\n      groups[val].push(item);\n      return groups;\n    }, {});\n    Object.keys(ordersSorted).forEach(item => {\n        result.push(...ordersSorted[item]);\n      }\n    );\n    return result;\n  }\n\n  canHaulerSeeFutureOrder() {\n    if (this.hauler) {\n      this.orderGroups.forEach(orderGroup => {\n        const provider = this.hauler.linkedProviders.find(p => p.name === orderGroup.name);\n        const canSeeFutureOrders = !moment(this.deliveryDate).isAfter(moment()) ||\n          (provider.configuration && provider.configuration.allowFutureViewForHauler);\n        orderGroup.canHaulerSeeFutureOrders = canSeeFutureOrders;\n\n        orderGroup.hidden = !canSeeFutureOrders;\n        if (!canSeeFutureOrders) {\n          this.toggleGroupView(orderGroup.name);\n        }\n      });\n    }\n  }\n\n  isDatePickerVisible() {\n    if (this.hauler) {\n      return this.hauler.linkedProviders.some(provider => provider.configuration.allowFutureViewForHauler);\n    }\n  }\n\n  private manageGroups(orders: Array<OrderView>) {\n    if (this.hauler) {\n      this.hauler.linkedProviders.forEach(provider => {\n        const orderGroup = new OrderGroup(provider.name);\n        this.orderGroups.push(orderGroup);\n      });\n      orders.forEach(orderView => {\n        const orderGroup = this.orderGroups.find(oG => oG.name === orderView.order.tenantName);\n        if (orderGroup) {\n          orderGroup.orders.push(orderView);\n        }\n      });\n    }\n  }\n\n  changeDisplayFormat(deliveryDate) {\n    this.displayFormat = this.datePipe.transform(deliveryDate, this.userSettings.hourFormat, this.userSettings.dateFormat, this.dateType);\n  }\n\n  ionViewDidLeave() {\n    this.unsubscribe.next();\n  }\n\n  ionViewWillUnload() {\n    this.unsubscribe.complete();\n  }\n}\n"]}