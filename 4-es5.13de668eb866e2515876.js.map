{"version":3,"sources":["webpack:///src/app/pages/setting/main-setting/main-setting.module.ts","webpack:///src/app/pages/setting/main-setting/main-setting.page.html","webpack:///src/app/pages/setting/main-setting/main-setting.page.ts"],"names":["routes","path","component","MainSettingPageModule","forChild","CONFIG","GA","PAGE_NAME","EVENT","NAME","ACTION","MainSettingPage","mobileContextService","platform","settingsManager","languageService","translateService","connectionStatusService","ga","log","mapService","modalCtrl","biometricService","storageService","alertController","unsubscribe","selectedProviders","geotracking","biometricAuth","keepScreenOn","sequenceOnSelect","showAverageDeliveryMoment","employeeControlsSubscriptions","signatureLockedOnLandscape","colorModeAuto","AUTO","colorModeLight","LIGHT","colorModeDark","DARK","googleMap","GOOGLE","appleMap","APPLE","wazeMap","WAZE","searchByAddressAndCoords","ADDRESS_AND_COORDINATES","searchByAddress","ADDRESS","searchByCoords","COORDINATES","isUsingBiometricAuthentication","biometricMethodEnum","userLocaleLang","getBrowserCultureLang","isIosPlatform","is","isCordova","userSettingsObservable","pipe","subscribe","userSettings","geotrackingEnabled","initialLanguage","language","selectedLanguage","colorMode","mapOption","mapQueryOption","sort","a","b","name","localeCompare","id","getDefaultLang","haulerObservable","hauler","connectionStatusSubscription","status","isConnected","isNetworkConnectedForUser","loadString","STORAGE_USE_BIOMETRIC_AUTH_KEY","then","result","reason","isAvailable","FINGERPRINT","FACE","COMMON","biometricAuthenticationAvailable","biometricAuthenticationMethod","error","trackView","info","next","complete","selectedValue","trackEvent","setGeotrackingEnabled","setKeepKeepScreenOn","applyLanguage","setSelectedProviders","setSequenceOnSelect","setShowAverageDeliveryMoment","setSignatureLockedOnLandscape","selectedProvider","openMap","position","address","addressOneLine","create","passwordChangeModal","present","setColorMode","console","setMapOption","setMapQueryOption","value","componentProps","availableMethod","modal","onDidDismiss","data","success","header","instant","message","buttons","text","role","cssClass","handler","persistString","alert","find","provider","visible","undefined","geotrackingChange","mapOptionChanged","mapQueryOptionChange","keepScreenOnChange","colorModeChange","sequenceOnSelectChange","showAverageDeliveryMomentChange","signatureLockedOnLandscapeChange","openPasswordChangeModal"],"mappings":"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","file":"4-es5.13de668eb866e2515876.js","sourcesContent":["import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {Routes} from '@angular/router';\nimport {ComponentsModule} from '@app/components/components.module';\nimport {MainSettingPage} from '@app/pages/setting/main-setting/main-setting.page';\nimport {IonicModule} from '@ionic/angular';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainSettingPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n  ],\n  declarations: [MainSettingPage]\n})\nexport class MainSettingPageModule {\n}\n","<ion-content class=\"ion-padding\">\n  <ion-list>\n    <ion-item-group>\n      <ion-item *ngIf=\"userLocaleLang !== 'en-US'\">\n        <fa-icon [icon]=\"['fas','language']\" size=\"lg\" slot=\"start\"></fa-icon>\n        <ion-label class=\"ion-text-wrap\">{{ 'pages.settings.languages-label' | translate }}</ion-label>\n        <ion-select [ngModel]=\"selectedLanguage\" (ngModelChange)=\"languageChange($event)\" slot=\"end\">\n          <ion-select-option value=\"fr\">Français</ion-select-option>\n          <ion-select-option value=\"en\">English</ion-select-option>\n        </ion-select>\n      </ion-item>\n\n      <ion-item *ngIf=\"biometricAuthenticationAvailable\">\n        <fa-icon [icon]=\"['fas','fingerprint']\" size=\"lg\" slot=\"start\" *ngIf=\"biometricAuthenticationMethod === biometricMethodEnum.FINGERPRINT\"></fa-icon>\n        <fa-icon [icon]=\"['fas','grin']\" size=\"lg\" slot=\"start\" *ngIf=\"biometricAuthenticationMethod === biometricMethodEnum.FACE\"></fa-icon>\n        <fa-icon [icon]=\"['fas','keyboard']\" size=\"lg\" slot=\"start\" *ngIf=\"biometricAuthenticationMethod ===  biometricMethodEnum.COMMON\"></fa-icon>\n        <ion-label class=\"ion-text-wrap\">{{ 'pages.settings.biometric' | translate }} {{ 'pages.settings.biometric.' + biometricAuthenticationMethod | translate }}</ion-label>\n        <ion-toggle [(ngModel)]=\"biometricAuth\" (ngModelChange)=\"biometricOptIn($event)\" slot=\"end\"></ion-toggle>\n      </ion-item>\n\n      <ion-item>\n        <ion-label class=\"ion-text-wrap\">\n          {{ 'pages.settings.background-geolocation-disclosure' | translate }}\n        </ion-label>\n      </ion-item>\n      <ion-item>\n        <fa-icon [icon]=\"['fas','crosshairs']\" size=\"lg\" slot=\"start\"></fa-icon>\n        <ion-label class=\"ion-text-wrap\">{{ 'pages.settings.geotracking' | translate }}</ion-label>\n        <ion-toggle [ngModel]=\"geotracking\" (ngModelChange)=\"geotrackingChange($event)\" slot=\"end\"></ion-toggle>\n      </ion-item>\n\n      <ion-item>\n        <fa-icon [icon]=\"['fas','map']\" size=\"lg\" class=\"fa-bar-button\" slot=\"start\"></fa-icon>\n        <ion-label class=\"ion-text-wrap\">{{'pages.settings.map_option' | translate }}</ion-label>\n        <ion-select [ngModel]=\"mapOption\" (ngModelChange)=\"mapOptionChanged($event)\" slot=\"end\">\n          <ion-select-option [value]=\"googleMap\">{{'pages.settings.google_maps' | translate}}</ion-select-option>\n          <ion-select-option *ngIf=\"isIosPlatform\" [value]=\"appleMap\">{{'pages.settings.apple_maps' | translate}}</ion-select-option>\n          <ion-select-option [value]=\"wazeMap\">{{'pages.settings.waze_maps' | translate}}</ion-select-option>\n        </ion-select>\n      </ion-item>\n\n      <ion-item>\n        <fa-icon [icon]=\"['fas','map-marker']\" size=\"lg\" class=\"fa-bar-button\" slot=\"start\"></fa-icon>\n        <ion-label class=\"ion-text-wrap\">{{'pages.settings.map_query_option' | translate }}</ion-label>\n        <ion-select interface=\"action-sheet\" [ngModel]=\"mapQueryOption\" (ngModelChange)=\"mapQueryOptionChange($event)\" slot=\"end\">\n          <ion-select-option [value]=\"searchByAddressAndCoords\">{{'pages.settings.map_search_by_address_and_coordinates' | translate}}</ion-select-option>\n          <ion-select-option [value]=\"searchByAddress\">{{'pages.settings.map_search_by_address' | translate}}</ion-select-option>\n          <ion-select-option [value]=\"searchByCoords\">{{'pages.settings.map_search_by_coordinates' | translate}}</ion-select-option>\n        </ion-select>\n      </ion-item>\n\n      <ion-item>\n        <fa-icon [icon]=\"['fas','mobile']\" size=\"lg\" slot=\"start\"></fa-icon>\n        <ion-label class=\"ion-text-wrap\">{{ 'pages.settings.keepScreenOn' | translate }}</ion-label>\n        <ion-toggle [ngModel]=\"keepScreenOn\" (ngModelChange)=\"keepScreenOnChange($event)\" slot=\"end\"></ion-toggle>\n      </ion-item>\n\n      <ion-item>\n        <fa-icon [icon]=\"['fal','moon']\" size=\"lg\" slot=\"start\"></fa-icon>\n        <ion-label class=\"ion-text-wrap\">{{ 'pages.settings.colorModeOption' | translate }}</ion-label>\n        <ion-select [ngModel]=\"colorMode\" (ngModelChange)=\"colorModeChange($event)\" slot=\"end\">\n          <ion-select-option\n            [value]=\"colorModeAuto\">{{'pages.settings.colorMode.auto' | translate}}</ion-select-option>\n          <ion-select-option\n            [value]=\"colorModeLight\">{{'pages.settings.colorMode.light' | translate}}</ion-select-option>\n          <ion-select-option\n            [value]=\"colorModeDark\">{{'pages.settings.colorMode.dark' | translate}}</ion-select-option>\n        </ion-select>\n      </ion-item>\n\n      <ion-item>\n        <fa-layers [fixedWidth]=\"true\" size=\"lg\" class=\"styled\" slot=\"start\">\n          <fa-icon [icon]=\"['far', 'circle']\"></fa-icon>\n          <fa-layers-text content=\"1\" transform=\"shrink-4\" class=\"number\"></fa-layers-text>\n        </fa-layers>\n\n        <ion-label class=\"ion-text-wrap\">{{ 'pages.settings.sequenceOnSelect' | translate }}</ion-label>\n        <ion-toggle [ngModel]=\"sequenceOnSelect\" (ngModelChange)=\"sequenceOnSelectChange($event)\" slot=\"end\"></ion-toggle>\n      </ion-item>\n\n      <ion-item>\n        <fa-icon [icon]=\"['fas','user-clock']\" size=\"lg\" slot=\"start\"></fa-icon>\n        <ion-label class=\"ion-text-wrap\">{{ 'pages.settings.showAverageDeliveryMoment' | translate }}</ion-label>\n        <ion-toggle [ngModel]=\"showAverageDeliveryMoment\" slot=\"end\"\n                    (ngModelChange)=\"showAverageDeliveryMomentChange($event)\"></ion-toggle>\n      </ion-item>\n\n      <ion-item>\n        <fa-icon [icon]=\"['fal','mobile']\" rotate=\"90\" size=\"lg\" slot=\"start\"></fa-icon>\n        <ion-label class=\"ion-text-wrap\">{{ 'pages.settings.signatureLockedOnLandscape' | translate }}</ion-label>\n        <ion-toggle [ngModel]=\"signatureLockedOnLandscape\" slot=\"end\"\n                    (ngModelChange)=\"signatureLockedOnLandscapeChange($event)\"></ion-toggle>\n      </ion-item>\n\n    </ion-item-group>\n\n    <ion-item-group *ngIf=\"withProviderSelection\">\n      <ion-list-header>\n        <span translate=\"pages.settings.providers-label\"></span>\n      </ion-list-header>\n      <ng-container *ngFor=\"let provider of selectedProviders\">\n        <ion-item *ngIf=\"provider.visible\">\n          <fa-icon [icon]=\"['fas','building']\" size=\"lg\" slot=\"start\" (click)=\"openMap(provider)\"></fa-icon>\n          <ion-label class=\"ion-text-wrap\">{{ provider.name }}</ion-label>\n          <ion-toggle [(ngModel)]=\"provider.selected\" (ngModelChange)=\"providerChange()\"\n                      [disabled]=\"!isConnected || !provider.enabled\"></ion-toggle>\n        </ion-item>\n      </ng-container>\n    </ion-item-group>\n\n    <ion-item-group>\n      <ion-list-header>\n        <span translate=\"pages.settings.security\"></span>\n      </ion-list-header>\n      <ng-container>\n        <ion-item (click)=\"openPasswordChangeModal()\">\n          <fa-icon [icon]=\"['fas','lock']\" size=\"lg\" slot=\"start\"></fa-icon>\n          <ion-label class=\"ion-text-wrap\"><span translate=\"pages.settings.changeLoginPassword\"></span></ion-label>\n          <fa-icon [icon]=\"['fas', 'chevron-right']\" size=\"lg\" slot=\"end\"></fa-icon>\n        </ion-item>\n      </ng-container>\n    </ion-item-group>\n  </ion-list>\n</ion-content>\n","import {Component} from '@angular/core';\nimport {SelectedProvider} from '@models/selected-provider.model';\nimport {TranslateService} from '@ngx-translate/core';\nimport {ConnectionStatusService} from '@services/connection-status-service/connection-status.service';\nimport {MblsAnalyticsService} from '@services/mbls-analytics-service/MblsAnalyticsService';\nimport {LanguageService} from '@services/language-service/language.service';\nimport {LogService} from '@services/log/log.service';\nimport {MobileContextService} from '@services/mobile-configuration-service/mobile-context.service';\nimport {SettingsManager} from '@services/settings-providers/settings.service';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {MapService} from '@services/map/map.service';\nimport {AlertController, ModalController, Platform} from '@ionic/angular';\nimport {PasswordChangeModalPage} from '@app/pages/password-change-modal/password-change-modal.page';\nimport {ColorModeEnum} from '@models/settings/ColorModeEnum.model';\nimport {MapOptionEnum, MapSearchOptionEnum} from '@models/settings/map-option.enum';\nimport {BiometricOptInPage} from '@app/pages/biometric-opt-in/biometric-opt-in.page';\nimport {BIOMETRIC_CONFIG, BIOMETRIC_TYPES, BiometricService} from '@services/biometric/biometric.service';\nimport {StorageService} from '@services/storage-service/storage.service';\n\nconst CONFIG = {\n  GA: {\n    PAGE_NAME: 'MainSettingPage',\n    EVENT: {\n      'GEOTRACKING-CHANGED': {\n        NAME: 'geotracking-setting',\n        ACTION: 'geotracking-changed'\n      },\n      'KEEP_SCREEN_ON-CHANGED': {\n        NAME: 'keep-screen-on-setting',\n        ACTION: 'keep-screen-on-changed'\n      },\n      'COLOR_MODE-CHANGED': {\n        NAME: 'color-mode-setting',\n        ACTION: 'color-mode-changed'\n      },\n      'LANGUAGE-CHANGED': {\n        NAME: 'language-setting',\n        ACTION: 'language-changed'\n      },\n      'PROVIDER-CHANGED': {\n        NAME: 'provider-setting',\n        ACTION: 'provider-changed'\n      },\n      'SEQUENCE_ON_SELECT-CHANGED': {\n        NAME: 'sequence_on_select-setting',\n        ACTION: 'sequence_on_select-changed'\n      },\n      'SHOW_AVERAGE_DELIVERY_MOMENT-CHANGED': {\n        NAME: 'show_average_delivery_moment-setting',\n        ACTION: 'show_average_delivery_moment-changed'\n      },\n      'SIGNATURE_LOCKED_ON_LANDSCAPE-CHANGED': {\n        NAME: 'signature_locked_on_landscape-setting',\n        ACTION: 'signature_locked_on_landscape-changed'\n      }\n    }\n  }\n};\n\n@Component({\n  selector: 'app-main-setting',\n  templateUrl: './main-setting.page.html',\n  styleUrls: ['./main-setting.page.scss'],\n})\nexport class MainSettingPage {\n  private unsubscribe: Subject<void> = new Subject<void>();\n  private initialLanguage: string;\n  isIosPlatform: boolean;\n  isCordova: boolean;\n  isConnected: boolean;\n  selectedProviders: Array<SelectedProvider> = [];\n  geotracking = false;\n  biometricAuth = false;\n  keepScreenOn = false;\n  sequenceOnSelect = true;\n  showAverageDeliveryMoment = false;\n  employeeControlsSubscriptions = true;\n  signatureLockedOnLandscape = true;\n  selectedLanguage: string;\n  colorMode: ColorModeEnum;\n  colorModeAuto: ColorModeEnum = ColorModeEnum.AUTO;\n  colorModeLight: ColorModeEnum = ColorModeEnum.LIGHT;\n  colorModeDark: ColorModeEnum = ColorModeEnum.DARK;\n\n  mapOption: MapOptionEnum;\n  googleMap: MapOptionEnum = MapOptionEnum.GOOGLE;\n  appleMap: MapOptionEnum = MapOptionEnum.APPLE;\n  wazeMap: MapOptionEnum = MapOptionEnum.WAZE;\n  mapQueryOption: MapSearchOptionEnum;\n  searchByAddressAndCoords: MapSearchOptionEnum = MapSearchOptionEnum.ADDRESS_AND_COORDINATES;\n  searchByAddress: MapSearchOptionEnum = MapSearchOptionEnum.ADDRESS;\n  searchByCoords: MapSearchOptionEnum = MapSearchOptionEnum.COORDINATES;\n\n  public userLocaleLang;\n\n  public biometricAuthenticationAvailable: boolean;\n  public isUsingBiometricAuthentication: boolean = false;\n  public biometricAuthenticationMethod: string;\n\n  biometricMethodEnum: typeof BIOMETRIC_TYPES = BIOMETRIC_TYPES;\n\n  constructor(private mobileContextService: MobileContextService,\n              private platform: Platform,\n              private settingsManager: SettingsManager,\n              private languageService: LanguageService,\n              private translateService: TranslateService,\n              private connectionStatusService: ConnectionStatusService,\n              private ga: MblsAnalyticsService,\n              private log: LogService,\n              private mapService: MapService,\n              private modalCtrl: ModalController,\n              private biometricService: BiometricService,\n              private storageService: StorageService,\n              private alertController: AlertController,\n  ) {\n    this.userLocaleLang = this.translateService.getBrowserCultureLang();\n    this.isIosPlatform = this.platform.is('ios');\n    this.isCordova = this.platform.is('cordova');\n  }\n\n  ionViewWillEnter(): void {\n    this.mobileContextService.userSettingsObservable\n      .pipe(\n        takeUntil(this.unsubscribe)\n      )\n      .subscribe(userSettings => {\n        if (userSettings) {\n          this.geotracking = userSettings.geotrackingEnabled;\n          this.initialLanguage = userSettings.language;\n          this.selectedLanguage = userSettings.language;\n          this.keepScreenOn = userSettings.keepScreenOn;\n          this.selectedProviders = userSettings.selectedProviders;\n          this.sequenceOnSelect = userSettings.sequenceOnSelect;\n          this.showAverageDeliveryMoment = userSettings.showAverageDeliveryMoment;\n          this.signatureLockedOnLandscape = userSettings.signatureLockedOnLandscape;\n          this.colorMode = userSettings.colorMode;\n          this.mapOption = userSettings.mapOption;\n          this.mapQueryOption = userSettings.mapQueryOption;\n\n          this.selectedProviders\n            .sort((a: SelectedProvider, b: SelectedProvider) => {\n              if (a.name && b.name) {\n                return a.name.localeCompare(b.name);\n              } else if (a.name) {\n                return 1;\n              } else if (b.name) {\n                return -1;\n              } else {\n                return a.id - b.id;\n              }\n            });\n        } else {\n          this.initialLanguage = this.translateService.getDefaultLang();\n          this.selectedLanguage = this.translateService.getDefaultLang();\n        }\n      });\n\n    this.mobileContextService.haulerObservable\n      .pipe(\n        takeUntil(this.unsubscribe)\n      )\n      .subscribe(hauler => {\n        this.employeeControlsSubscriptions = hauler && hauler.employeeControlsSubscriptions;\n      });\n\n    this.connectionStatusService.connectionStatusSubscription\n      .pipe(\n        takeUntil(this.unsubscribe)\n      )\n      .subscribe(status => {\n        this.isConnected = status.isNetworkConnectedForUser;\n      });\n\n    if (this.isCordova) {\n\n      this.storageService.loadString(BIOMETRIC_CONFIG.STORAGE_USE_BIOMETRIC_AUTH_KEY, false)\n        .then(result => {\n          if (result && result === 'true') {\n            this.isUsingBiometricAuthentication = true;\n            this.biometricAuth = true;\n          }\n        }, reason => {\n          this.isUsingBiometricAuthentication = false;\n          this.biometricAuth = false;\n        });\n\n      this.biometricService.isAvailable()\n        .then(result => {\n          if (result === BIOMETRIC_TYPES.FINGERPRINT || result === BIOMETRIC_TYPES.FACE || result === BIOMETRIC_TYPES.COMMON) {\n            this.biometricAuthenticationAvailable = true;\n            this.biometricAuthenticationMethod = result;\n          } else {\n            this.biometricAuthenticationAvailable = false;\n            this.biometricAuthenticationMethod = null;\n          }\n        }, error => {\n          this.biometricAuthenticationAvailable = false;\n          this.biometricAuthenticationMethod = null;\n        });\n    }\n  }\n\n  ionViewDidEnter() {\n    this.ga.trackView(CONFIG.GA.PAGE_NAME).catch(error => this.log.info(`Unable to track view ${CONFIG.GA.PAGE_NAME} with GA`, error));\n  }\n\n  get withProviderSelection(): boolean {\n    if (!this.selectedProviders) {\n      return false;\n    }\n\n    return this.selectedProviders.find(provider => provider.visible) !== undefined;\n  }\n\n  ionViewDidLeave() {\n    this.unsubscribe.next();\n  }\n\n  ionViewWillUnload() {\n    this.unsubscribe.complete();\n  }\n\n  geotrackingChange(selectedValue) {\n    this.geotracking = selectedValue;\n    this.ga.trackEvent(CONFIG.GA.EVENT['GEOTRACKING-CHANGED'].NAME, CONFIG.GA.EVENT['GEOTRACKING-CHANGED'].ACTION, 'GeotrackingSetting').catch(error => this.log.error(`Unable to track event ${CONFIG.GA.EVENT['GEOTRACKING-CHANGED']} with GA`, error));\n    this.settingsManager.setGeotrackingEnabled(this.geotracking);\n  }\n\n  keepScreenOnChange(selectedValue) {\n    this.keepScreenOn = selectedValue;\n    this.ga.trackEvent(CONFIG.GA.EVENT['KEEP_SCREEN_ON-CHANGED'].NAME, CONFIG.GA.EVENT['KEEP_SCREEN_ON-CHANGED'].ACTION, 'KeepScreenOnSetting').catch(error => this.log.error(`Unable to track event ${CONFIG.GA.EVENT['KEEP_SCREEN_ON-CHANGED']} with GA`, error));\n    this.settingsManager.setKeepKeepScreenOn(this.keepScreenOn);\n  }\n\n  languageChange(selectedValue) {\n    this.selectedLanguage = selectedValue;\n    this.languageService.applyLanguage(this.selectedLanguage)\n      .then(() => {\n        this.ga.trackEvent(CONFIG.GA.EVENT['LANGUAGE-CHANGED'].NAME, CONFIG.GA.EVENT['LANGUAGE-CHANGED'].ACTION, 'LanguageSetting').catch(error => this.log.error(`Unable to track event ${CONFIG.GA.EVENT['LANGUAGE-CHANGED']} with GA`, error));\n      });\n  }\n\n  providerChange() {\n    this.ga.trackEvent(CONFIG.GA.EVENT['PROVIDER-CHANGED'].NAME, CONFIG.GA.EVENT['PROVIDER-CHANGED'].ACTION, 'ProviderSetting').catch(error => this.log.error(`Unable to track event ${CONFIG.GA.EVENT['PROVIDER-CHANGED']} with GA`, error));\n    this.settingsManager.setSelectedProviders(this.selectedProviders);\n  }\n\n  sequenceOnSelectChange(selectedValue) {\n    this.sequenceOnSelect = selectedValue;\n    this.ga.trackEvent(CONFIG.GA.EVENT['SEQUENCE_ON_SELECT-CHANGED'].NAME, CONFIG.GA.EVENT['SEQUENCE_ON_SELECT-CHANGED'].ACTION, 'SequenceOnSelectSetting').catch(error => this.log.error(`Unable to track event ${CONFIG.GA.EVENT['SEQUENCE_ON_SELECT-CHANGED']} with GA`, error));\n    this.settingsManager.setSequenceOnSelect(this.sequenceOnSelect);\n  }\n\n  showAverageDeliveryMomentChange(selectedValue) {\n    this.showAverageDeliveryMoment = selectedValue;\n    this.ga.trackEvent(CONFIG.GA.EVENT['SHOW_AVERAGE_DELIVERY_MOMENT-CHANGED'].NAME, CONFIG.GA.EVENT['SHOW_AVERAGE_DELIVERY_MOMENT-CHANGED'].ACTION, 'ShowAverageDeliveryMomentSetting').catch(error => this.log.error(`Unable to track event ${CONFIG.GA.EVENT['SHOW_AVERAGE_DELIVERY_MOMENT-CHANGED']} with GA`, error));\n    this.settingsManager.setShowAverageDeliveryMoment(this.showAverageDeliveryMoment);\n  }\n\n  signatureLockedOnLandscapeChange(selectedValue) {\n    this.signatureLockedOnLandscape = selectedValue;\n    this.ga.trackEvent(CONFIG.GA.EVENT['SIGNATURE_LOCKED_ON_LANDSCAPE-CHANGED'].NAME, CONFIG.GA.EVENT['SIGNATURE_LOCKED_ON_LANDSCAPE-CHANGED'].ACTION, 'SignatureLockedOnLandscapeSetting').catch(error => this.log.error(`Unable to track event ${CONFIG.GA.EVENT['SIGNATURE_LOCKED_ON_LANDSCAPE-CHANGED']} with GA`, error));\n    this.settingsManager.setSignatureLockedOnLandscape(this.signatureLockedOnLandscape);\n  }\n\n  openMap(selectedProvider: SelectedProvider) {\n    this.mapService.openMap(null, selectedProvider.position, selectedProvider.address.addressOneLine, selectedProvider.name);\n  }\n\n  async openPasswordChangeModal() {\n    const passwordChangeModal = await this.modalCtrl.create(\n      {\n        component: PasswordChangeModalPage\n      }\n    );\n    await passwordChangeModal.present();\n  }\n\n  colorModeChange(selectedValue) {\n    this.colorMode = selectedValue;\n    this.ga.trackEvent(CONFIG.GA.EVENT['COLOR_MODE-CHANGED'].NAME, CONFIG.GA.EVENT['COLOR_MODE-CHANGED'].ACTION, 'ColorModeSetting').catch(error => this.log.error(`Unable to track event ${CONFIG.GA.EVENT['COLOR_MODE-CHANGED']} with GA`, error));\n    this.settingsManager.setColorMode(this.colorMode);\n  }\n\n  mapOptionChanged(selectedValue) {\n    console.log('mapOptionChanged', selectedValue);\n    this.mapOption = selectedValue;\n    this.settingsManager.setMapOption(this.mapOption);\n  }\n\n  mapQueryOptionChange(selectedValue) {\n    console.log('mapQueryOptionChange', selectedValue);\n    this.mapQueryOption = selectedValue;\n    this.settingsManager.setMapQueryOption(this.mapQueryOption);\n  }\n\n  biometricOptIn(value) {\n    if (value) {\n      this.modalCtrl.create({\n        component: BiometricOptInPage,\n        componentProps: {\n          availableMethod: this.biometricAuthenticationMethod\n        }\n      }).then(modal => {\n        modal.onDidDismiss()\n          .then((result) => {\n            this.biometricAuth = result.data.success;\n          });\n\n        modal.present();\n      });\n    } else {\n      this.alertController\n        .create({\n          header: this.translateService.instant('actions.seen'),\n          message: this.translateService.instant('pages.settings.biometric.remove'),\n          buttons: [\n            {\n              text: this.translateService.instant('actions.cancel'),\n              role: 'cancel',\n              cssClass: 'secondary',\n              handler: () => {\n                this.biometricAuth = true;\n              }\n            }, {\n              text: this.translateService.instant('actions.continue'),\n              handler: () => {\n                this.storageService.persistString(BIOMETRIC_CONFIG.STORAGE_USE_BIOMETRIC_AUTH_KEY, 'false', false);\n              }\n            }\n          ]\n        })\n        .then(alert => {\n          alert.present();\n        });\n    }\n\n  }\n}\n"]}