{"version":3,"sources":["webpack:///src/app/pages/setting/setting.module.ts","webpack:///src/app/pages/setting/setting.page.ts","webpack:///src/app/pages/setting/setting.page.html","webpack:///src/app/pages/setting/settings-tabs.router.module.ts"],"names":["routes","path","component","SettingPageModule","forChild","CONFIG","GA","PAGE_NAME","EVENT","FORCING_SYNC","NAME","ACTION","SettingPage","mobileContextService","log","connectionStatusService","orderSync","settingsManager","ga","platform","unsubscribe","withLocations","actionData","ready","then","trackView","error","info","userSettingsObservable","pipe","subscribe","userSettings","connectionStatusSubscription","status","isConnected","isNetworkConnectedForUser","selectedLanguage","initialLanguage","submitContext","selectedProvidersHasChanged","trackEvent","fullSync","next","complete","children","loadChildren","m","MainSettingPageModule","DisplaySettingPageModule","LocationSettingPageModule","redirectTo","pathMatch","SettingsTabsRoutingModule"],"mappings":"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","file":"6-es5.ecb85c81877e5f280da7.js","sourcesContent":["import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {Routes} from '@angular/router';\nimport {ComponentsModule} from '@app/components/components.module';\nimport {SettingsTabsRoutingModule} from '@app/pages/setting/settings-tabs.router.module';\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\n\nimport {IonicModule} from '@ionic/angular';\nimport {TranslateModule} from '@ngx-translate/core';\n\nimport {SettingPage} from './setting.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    FontAwesomeModule,\n    TranslateModule,\n    ComponentsModule,\n    SettingsTabsRoutingModule\n  ],\n  declarations: [SettingPage]\n})\nexport class SettingPageModule {\n}\n","import {ViewChild} from '@angular/core';\nimport {Component} from '@angular/core';\nimport {Platform} from '@ionic/angular';\nimport {IonContent} from '@ionic/angular';\nimport {ConnectionStatusService} from '@services/connection-status-service/connection-status.service';\nimport {MblsAnalyticsService} from '@services/mbls-analytics-service/MblsAnalyticsService';\nimport {LogService} from '@services/log/log.service';\nimport {MobileContextService} from '@services/mobile-configuration-service/mobile-context.service';\nimport {OrderSyncService} from '@services/order-sync/order-sync.service';\nimport {SettingsManager} from '@services/settings-providers/settings.service';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nconst CONFIG = {\n  GA: {\n    PAGE_NAME: 'SettingsPage',\n    EVENT: {\n      FORCING_SYNC: {\n        NAME: 'force-sync',\n        ACTION: 'on-provider-change'\n      }\n    }\n  }\n};\n\n\n@Component({\n  selector: 'app-setting',\n  templateUrl: './setting.page.html',\n  styleUrls: ['./setting.page.scss'],\n})\nexport class SettingPage {\n\n  @ViewChild('content') content: IonContent;\n  private unsubscribe: Subject<void> = new Subject<void>();\n\n  public isConnected: boolean;\n  withLocations = true;\n\n  actionData: any = {};\n\n  constructor(private mobileContextService: MobileContextService,\n              private log: LogService,\n              private connectionStatusService: ConnectionStatusService,\n              private orderSync: OrderSyncService,\n              private settingsManager: SettingsManager,\n              private ga: MblsAnalyticsService,\n              private platform: Platform,) {\n    this.platform.ready()\n      .then(() => {\n        this.ga.trackView(CONFIG.GA.PAGE_NAME).catch(error => this.log.info(`Unable to track view ${CONFIG.GA.PAGE_NAME} with GA`, error));\n      });\n  }\n\n  ionViewWillEnter(): void {\n    this.mobileContextService.userSettingsObservable\n      .pipe(\n        takeUntil(this.unsubscribe)\n      )\n      .subscribe(userSettings => {\n        if (userSettings) {\n        } else {\n        }\n      });\n\n    this.connectionStatusService.connectionStatusSubscription\n      .pipe(\n        takeUntil(this.unsubscribe)\n      )\n      .subscribe(status => {\n        this.isConnected = status.isNetworkConnectedForUser;\n      });\n\n  }\n\n  ionViewWillLeave() {\n    if (this.actionData.selectedLanguage && this.actionData.selectedLanguage !== this.actionData.initialLanguage) {\n      this.mobileContextService.submitContext().subscribe();\n      this.actionData.selectedLanguage = null;\n      this.actionData.initialLanguage = null;\n    }\n\n    if (this.settingsManager.selectedProvidersHasChanged) {\n      this.settingsManager.selectedProvidersHasChanged = false;\n      this.ga.trackEvent(CONFIG.GA.EVENT.FORCING_SYNC.NAME, CONFIG.GA.EVENT.FORCING_SYNC.ACTION).catch(error => this.log.error(`Unable to track event ${CONFIG.GA.EVENT.FORCING_SYNC} with GA`, error));\n      this.orderSync.fullSync()\n        .subscribe(\n          () => {\n            return true;\n          },\n          (error) => {\n            this.log.error('Problem with sync after leaving settings page', error);\n            return true;\n          });\n    }\n\n    return true;\n  }\n\n  ionViewDidLeave() {\n    this.unsubscribe.next();\n  }\n\n  ionViewWillUnload() {\n    this.unsubscribe.complete();\n  }\n}\n","<ion-tabs>\n  <ion-header>\n    <ion-toolbar>\n      <ion-buttons slot=\"start\">\n        <ion-menu-button>\n          <img src=\"assets/images/logo_menu.png\"/>\n        </ion-menu-button>\n      </ion-buttons>\n      <ion-title>\n        <span translate=\"pages.drawer-menu.settings\"></span>\n      </ion-title>\n    </ion-toolbar>\n    <offline-indicator [content]=\"content\"></offline-indicator>\n  </ion-header>\n\n  <ion-tab-bar slot=\"top\">\n    <ion-tab-button tab=\"main\">\n      <ion-label>\n        <fa-icon [icon]=\"['fas','sliders-h']\" size=\"lg\"></fa-icon>\n        <span translate=\"pages.settings.main\"></span>\n      </ion-label>\n    </ion-tab-button>\n\n    <ion-tab-button tab=\"display\">\n      <ion-label>\n        <fa-icon [icon]=\"['fas','mobile']\" size=\"lg\"></fa-icon>\n        <span translate=\"pages.settings.display\"></span>\n      </ion-label>\n    </ion-tab-button>\n\n    <ion-tab-button tab=\"location\">\n      <ion-label>\n        <fa-icon [icon]=\"['fas','map-marker-edit']\" size=\"lg\"></fa-icon>\n        <span translate=\"pages.settings.locations\"></span>\n      </ion-label>\n    </ion-tab-button>\n  </ion-tab-bar>\n\n</ion-tabs>\n\n","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {Routes} from '@angular/router';\nimport {SettingPage} from '@app/pages/setting/setting.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingPage,\n    children: [\n      {\n        path: 'main',\n        children: [\n          {\n            path: '',\n            loadChildren: () => import('./main-setting/main-setting.module').then(m => m.MainSettingPageModule)\n          }\n        ]\n      },\n      {\n        path: 'display',\n        children: [\n          {\n            path: '',\n            loadChildren: () => import('./display-setting/display-setting.module').then(m => m.DisplaySettingPageModule)\n          }\n        ]\n      },\n      {\n        path: 'location',\n        children: [\n          {\n            path: '',\n            loadChildren: () => import('./location-setting/location-setting.module').then(m => m.LocationSettingPageModule)\n          }\n        ]\n      },\n      {\n        path: '',\n        redirectTo: '/setting/main',\n        pathMatch: 'full'\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule]\n})\nexport class SettingsTabsRoutingModule {\n}\n"]}