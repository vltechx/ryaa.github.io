{"version":3,"sources":["webpack:///src/app/pages/setting/display-setting/display-setting.module.ts","webpack:///src/app/pages/setting/display-setting/display-setting.page.html","webpack:///src/app/pages/setting/display-setting/display-setting.page.ts"],"names":["routes","path","component","DisplaySettingPageModule","forChild","DisplaySettingPage","mobileContextService","settingsManager","platform","translateService","modalCtrl","unsubscribe","canDoRouteOptimization","displayType","actionButtons","dateFormatDMY","dateDMY","dateFormatMDY","dateMDY","dateFormatYMD","dateISO","hourFormatMilitary","MILITARY","hourFormatStandard","STANDARD","distanceSI","SI","distanceIMPERIAL","IMPERIAL","signaturePinValue","createPin","editPin","enterPin","displayOrderReferenceOnOrderList","displayProviderFooter","displayDelayCounter","isIosPlatform","is","userSettingsObservable","pipe","subscribe","userSettings","distanceUnit","dateFormat","hourFormat","signaturePinActivated","buttons","next","complete","selectedValue","editSignaturePin","signaturePinChanged","type","create","componentProps","signaturePinModal","present","onDidDismiss","then","data","ok","setDisplayType","multipleSelection","actionButtonsSettingChanged","map","setDistanceUnit","Number","setDateFormat","setHourFormat","reordering","optimization","grouping","sorting","filter","setOrderReferenceDisplay","displayProviderFooterSettingChanged","displayDelayCounterSettingChanged","displayTypeChange","multipleSelectionChange","mapButtonChange","reorderingChanged","groupingButtonChanged","sortingButtonChanged","filterButtonChanged","signaturePinChange","distanceUnitChange","dateFormatChange","hourFormatChange","orderReferenceDisplayChange"],"mappings":"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","file":"2-es5.fdeb349d2fa637fa1814.js","sourcesContent":["import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {Routes} from '@angular/router';\nimport {ComponentsModule} from '@app/components/components.module';\nimport {DisplaySettingPage} from '@app/pages/setting/display-setting/display-setting.page';\nimport {IonicModule} from '@ionic/angular';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DisplaySettingPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    ComponentsModule,\n  ],\n  declarations: [DisplaySettingPage]\n})\nexport class DisplaySettingPageModule {\n}\n","<ion-content class=\"ion-padding\">\n  <ion-list>\n    <ion-item-group>\n      <ion-item>\n        <fa-icon [icon]=\"['fas', 'th-list']\" size=\"lg\" class=\"fa-bar-button\" slot=\"start\"></fa-icon>\n        <ion-label class=\"ion-text-wrap\">{{ 'options.displayType.label' | translate}}</ion-label>\n        <ion-toggle [ngModel]=\"displayType\" (ngModelChange)=\"displayTypeChange($event)\" slot=\"end\"></ion-toggle>\n      </ion-item>\n\n      <ion-item>\n        <fa-icon [icon]=\"['fas', 'check-square']\" size=\"lg\" class=\"fa-bar-button\" slot=\"start\"></fa-icon>\n        <ion-label class=\"ion-text-wrap\">\n          <span translate=\"pages.settings.buttons.multipleSelection\"></span>\n        </ion-label>\n        <ion-toggle [ngModel]=\"actionButtons.multipleSelection\" (ngModelChange)=\"multipleSelectionChange($event)\" slot=\"end\"></ion-toggle>\n      </ion-item>\n\n      <ion-item-group>\n        <ion-item>\n          <fa-icon [icon]=\"['fas','map']\" size=\"lg\" class=\"fa-bar-button\" slot=\"start\"></fa-icon>\n          <ion-label class=\"ion-text-wrap\">\n            <span translate=\"pages.settings.buttons.map\"></span>\n          </ion-label>\n          <ion-toggle [ngModel]=\"actionButtons.map\" (ngModelChange)=\"mapButtonChange($event)\" slot=\"end\"></ion-toggle>\n        </ion-item>\n      </ion-item-group>\n\n      <ion-item>\n        <fa-icon [icon]=\"['fas', 'retweet']\" size=\"lg\" slot=\"start\"></fa-icon>\n        <ion-label class=\"ion-text-wrap\">\n          <span translate=\"pages.settings.buttons.reordering\"></span>\n        </ion-label>\n        <ion-toggle [ngModel]=\"actionButtons.reordering\" (ngModelChange)=\"reorderingChanged($event)\" slot=\"end\"></ion-toggle>\n      </ion-item>\n\n      <ion-item *ngIf=\"canDoRouteOptimization\">\n        <fa-icon [icon]=\"['fas','route']\" size=\"lg\" class=\"fa-bar-button\" slot=\"start\"></fa-icon>\n        <ion-label class=\"ion-text-wrap\">\n          <span translate=\"pages.settings.buttons.optimization\"></span>\n        </ion-label>\n        <ion-toggle [ngModel]=\"actionButtons.optimization\" (ngModelChange)=\"optimizationButtonChanged($event)\" slot=\"end\"></ion-toggle>\n      </ion-item>\n\n      <ion-item>\n        <fa-icon [icon]=\"['fal','list-alt']\" size=\"lg\" class=\"fa-bar-button\" slot=\"start\"></fa-icon>\n        <ion-label class=\"ion-text-wrap\">\n          <span translate=\"pages.settings.buttons.grouping\"></span>\n        </ion-label>\n        <ion-toggle [ngModel]=\"actionButtons.grouping\" (ngModelChange)=\"groupingButtonChanged($event)\" slot=\"end\"></ion-toggle>\n      </ion-item>\n\n      <ion-item>\n        <fa-icon [icon]=\"['fas','sort-alpha-down']\" size=\"lg\" slot=\"start\"></fa-icon>\n        <ion-label class=\"ion-text-wrap\">\n          <span translate=\"pages.settings.buttons.sorting\"></span>\n        </ion-label>\n        <ion-toggle [ngModel]=\"actionButtons.sorting\" (ngModelChange)=\"sortingButtonChanged($event)\" slot=\"end\"></ion-toggle>\n      </ion-item>\n\n      <ion-item>\n        <fa-icon [icon]=\"['fas','filter']\" size=\"lg\" class=\"fa-bar-button\" slot=\"start\"></fa-icon>\n        <ion-label class=\"ion-text-wrap\">\n          <span translate=\"pages.settings.buttons.filter\"></span>\n        </ion-label>\n        <ion-toggle [ngModel]=\"actionButtons.filter\" (ngModelChange)=\"filterButtonChanged($event)\" slot=\"end\"></ion-toggle>\n      </ion-item>\n\n      <ion-item>\n        <fa-icon [icon]=\"['fas','lock']\" size=\"lg\" class=\"fa-bar-button\" slot=\"start\"></fa-icon>\n        <ion-label class=\"ion-text-wrap\">\n          <span translate=\"pages.settings.buttons.signaturePin\"></span>\n        </ion-label>\n        <ion-toggle [ngModel]=\"signaturePinActivated\" (ngModelChange)=\"signaturePinChange($event)\"\n                    slot=\"end\"></ion-toggle>\n      </ion-item>\n\n      <ion-item *ngIf=\"signaturePinActivated === true\">\n        <ion-button slot=\"end\" (click)=\"editSignaturePin(editPin)\" fill=\"outline\">\n          <span translate=\"pages.settings.buttons.changePin\"></span>\n        </ion-button>\n      </ion-item>\n\n      <ion-item>\n        <fa-icon [icon]=\"['fas','ruler-combined']\" size=\"lg\" class=\"fa-bar-button\" slot=\"start\"></fa-icon>\n        <ion-label class=\"ion-text-wrap\">{{ 'pages.settings.distanceUnit' | translate }}</ion-label>\n        <ion-select [ngModel]=\"distanceUnit\" (ngModelChange)=\"distanceUnitChange($event)\" slot=\"end\">\n          <ion-select-option\n            [value]=\"distanceSI\">{{'pages.settings.kilometersAndMeters' | translate}}</ion-select-option>\n          <ion-select-option\n            [value]=\"distanceIMPERIAL\">{{'pages.settings.milesAndYards' | translate}}</ion-select-option>\n        </ion-select>\n      </ion-item>\n\n      <ion-item>\n        <fa-icon [icon]=\"['fas','calendar-day']\" size=\"lg\" class=\"fa-bar-button\" slot=\"start\"></fa-icon>\n        <ion-label class=\"ion-text-wrap\">{{ 'pages.settings.dateFormat' | translate }}</ion-label>\n        <ion-select [ngModel]=\"dateFormat\" (ngModelChange)=\"dateFormatChange($event)\" slot=\"end\">\n          <ion-select-option [value]=\"dateFormatDMY\">{{'pages.settings.DMY' | translate}}</ion-select-option>\n          <ion-select-option [value]=\"dateFormatMDY\">{{'pages.settings.MDY' | translate}}</ion-select-option>\n          <ion-select-option [value]=\"dateFormatYMD\">{{'pages.settings.YMD' | translate}}</ion-select-option>\n        </ion-select>\n      </ion-item>\n\n      <ion-item>\n        <fa-icon [icon]=\"['fas','clock']\" size=\"lg\" class=\"fa-bar-button\" slot=\"start\"></fa-icon>\n        <ion-label class=\"ion-text-wrap\">{{ 'pages.settings.hourFormat' | translate }}</ion-label>\n        <ion-select [ngModel]=\"hourFormat\" (ngModelChange)=\"hourFormatChange($event)\"\n                    slot=\"end\">\n          <ion-select-option\n            [value]=\"hourFormatMilitary\">{{'pages.settings.hourFormatMilitary' | translate}}</ion-select-option>\n          <ion-select-option\n            [value]=\"hourFormatStandard\">{{'pages.settings.hourFormatStandard' | translate}}</ion-select-option>\n        </ion-select>\n      </ion-item>\n\n      <ion-item>\n        <fa-icon [icon]=\"['fas', 'clock']\" size=\"lg\" class=\"fa-bar-button\" slot=\"start\"></fa-icon>\n        <ion-label class=\"ion-text-wrap\">{{ 'pages.settings.displayDelayCounter' | translate}}</ion-label>\n        <ion-toggle [ngModel]=\"displayDelayCounter\" (ngModelChange)=\"displayDelayCounterSettingChanged($event)\"\n                    slot=\"end\"></ion-toggle>\n      </ion-item>\n\n      <ion-item>\n        <fa-icon [icon]=\"['fas', 'th-list']\" size=\"lg\" class=\"fa-bar-button\" slot=\"start\"></fa-icon>\n        <ion-label class=\"ion-text-wrap\">{{ 'options.orderReferenceDisplay.label' | translate}}</ion-label>\n        <ion-toggle [ngModel]=\"displayOrderReferenceOnOrderList\" (ngModelChange)=\"orderReferenceDisplayChange($event)\"\n                    slot=\"end\"></ion-toggle>\n      </ion-item>\n\n      <ion-item>\n        <fa-icon [icon]=\"['fas', 'building']\" size=\"lg\" class=\"fa-bar-button\" slot=\"start\"></fa-icon>\n        <ion-label class=\"ion-text-wrap\">{{ 'options.displayProviderFooter.label' | translate}}</ion-label>\n        <ion-toggle [ngModel]=\"displayProviderFooter\" (ngModelChange)=\"displayProviderFooterSettingChanged($event)\"\n                    slot=\"end\"></ion-toggle>\n      </ion-item>\n    </ion-item-group>\n\n  </ion-list>\n\n</ion-content>\n","import {Component} from '@angular/core';\nimport {ActionButtons} from '@models/settings/action-buttons.model';\nimport {SignaturePinEnum} from '@models/settings/signature-pin.model';\nimport {DateFormatEnum} from '@models/units-and-format/date-format.enum';\nimport {DistanceSystemEnum} from '@models/units-and-format/distance-system.enum';\nimport {TimeFormatEnum} from '@models/units-and-format/time-format.enum';\nimport {SignaturePinModalPage} from '@app/pages/signature-pin-modal/signature-pin-modal.page';\nimport {ModalController, Platform} from '@ionic/angular';\nimport {TranslateService} from '@ngx-translate/core';\nimport {MobileContextService} from '@services/mobile-configuration-service/mobile-context.service';\nimport {SettingsManager} from '@services/settings-providers/settings.service';\nimport {Subject} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-display-setting',\n  templateUrl: './display-setting.page.html',\n  styleUrls: ['./display-setting.page.scss'],\n})\nexport class DisplaySettingPage {\n  private unsubscribe: Subject<void> = new Subject<void>();\n  canDoRouteOptimization = false;\n  displayType = false;\n  actionButtons: ActionButtons = new ActionButtons();\n\n  dateFormat: DateFormatEnum;\n  dateFormatDMY: DateFormatEnum = DateFormatEnum.dateDMY;\n  dateFormatMDY: DateFormatEnum = DateFormatEnum.dateMDY;\n  dateFormatYMD: DateFormatEnum = DateFormatEnum.dateISO;\n  hourFormat: TimeFormatEnum;\n  hourFormatMilitary: TimeFormatEnum = TimeFormatEnum.MILITARY;\n  hourFormatStandard: TimeFormatEnum = TimeFormatEnum.STANDARD;\n  distanceSI: DistanceSystemEnum = DistanceSystemEnum.SI;\n  distanceIMPERIAL: DistanceSystemEnum = DistanceSystemEnum.IMPERIAL;\n  distanceUnit: DistanceSystemEnum;\n\n  isIosPlatform: boolean;\n  signaturePinActivated: boolean;\n  signaturePinValue = '';\n  public createPin: SignaturePinEnum = SignaturePinEnum.createPin;\n  public editPin: SignaturePinEnum = SignaturePinEnum.editPin;\n  public enterPin: SignaturePinEnum = SignaturePinEnum.enterPin;\n  displayOrderReferenceOnOrderList = false;\n  displayProviderFooter = false;\n  displayDelayCounter = true;\n\n  constructor(private mobileContextService: MobileContextService,\n              private settingsManager: SettingsManager,\n              private platform: Platform,\n              private translateService: TranslateService,\n              private modalCtrl: ModalController,\n  ) {\n    this.isIosPlatform = this.platform.is('ios');\n  }\n\n  ionViewWillEnter(): void {\n    this.mobileContextService.userSettingsObservable\n      .pipe(\n        takeUntil(this.unsubscribe)\n      )\n      .subscribe(userSettings => {\n        if (userSettings) {\n          this.canDoRouteOptimization = userSettings.canDoRouteOptimization;\n          this.displayType = userSettings.displayType;\n          this.distanceUnit = userSettings.distanceUnit;\n          this.dateFormat = userSettings.dateFormat;\n          this.hourFormat = userSettings.hourFormat;\n          this.signaturePinActivated = userSettings.signaturePinActivated;\n          this.signaturePinValue = userSettings.signaturePinValue;\n          this.displayProviderFooter = userSettings.displayProviderFooter;\n          this.displayDelayCounter = userSettings.displayDelayCounter;\n\n          this.displayOrderReferenceOnOrderList = userSettings.displayOrderReferenceOnOrderList;\n\n          if (!userSettings.buttons) {\n            userSettings.buttons = new ActionButtons();\n          }\n          this.actionButtons = userSettings.buttons;\n        } else {\n          this.actionButtons = new ActionButtons();\n        }\n      });\n  }\n\n  ionViewDidLeave() {\n    this.unsubscribe.next();\n  }\n\n  ionViewWillUnload() {\n    this.unsubscribe.complete();\n  }\n\n  async signaturePinChange(selectedValue) {\n    this.signaturePinActivated = selectedValue;\n    if (this.signaturePinActivated && this.signaturePinValue === '') {\n      await this.editSignaturePin(this.createPin);\n    } else if (!this.signaturePinActivated) {\n      this.settingsManager.signaturePinChanged(this.signaturePinActivated, '');\n    }\n  }\n\n  async editSignaturePin(type) {\n    const signaturePinModal = await this.modalCtrl.create(\n      {\n        component: SignaturePinModalPage,\n        componentProps: {\n          type: type,\n          signaturePinValue: this.signaturePinValue\n        }\n      }\n    );\n    await signaturePinModal.present();\n    await signaturePinModal.onDidDismiss().then(data => {\n      if (data.data) {\n        this.signaturePinActivated = data.data.ok;\n        this.signaturePinValue = data.data.signaturePinValue;\n      } else {\n        this.signaturePinActivated = false;\n        this.signaturePinValue = '';\n      }\n      this.settingsManager.signaturePinChanged(this.signaturePinActivated, this.signaturePinValue);\n    });\n  }\n\n  displayTypeChange(selectedValue) {\n    this.displayType = selectedValue;\n    this.settingsManager.setDisplayType(this.displayType);\n  }\n\n  multipleSelectionChange(selectedValue) {\n    this.actionButtons.multipleSelection = selectedValue;\n    this.settingsManager.actionButtonsSettingChanged(this.actionButtons);\n  }\n\n  mapButtonChange(selectedValue) {\n    this.actionButtons.map = selectedValue;\n    this.settingsManager.actionButtonsSettingChanged(this.actionButtons);\n  }\n\n  distanceUnitChange(selectedValue) {\n    this.distanceUnit = selectedValue;\n    this.settingsManager.setDistanceUnit(Number(this.distanceUnit));\n  }\n\n  dateFormatChange(selectedValue) {\n    this.dateFormat = selectedValue;\n    this.settingsManager.setDateFormat(this.dateFormat);\n  }\n\n  hourFormatChange(selectedValue) {\n    this.hourFormat = selectedValue;\n    this.settingsManager.setHourFormat(this.hourFormat);\n  }\n\n  reorderingChanged(selectedValue) {\n    this.actionButtons.reordering = selectedValue;\n    this.settingsManager.actionButtonsSettingChanged(this.actionButtons);\n  }\n\n  optimizationButtonChanged(selectedValue) {\n    this.actionButtons.optimization = selectedValue;\n    this.settingsManager.actionButtonsSettingChanged(this.actionButtons);\n  }\n\n  groupingButtonChanged(selectedValue) {\n    this.actionButtons.grouping = selectedValue;\n    this.settingsManager.actionButtonsSettingChanged(this.actionButtons);\n  }\n\n  sortingButtonChanged(selectedValue) {\n    this.actionButtons.sorting = selectedValue;\n    this.settingsManager.actionButtonsSettingChanged(this.actionButtons);\n  }\n\n  filterButtonChanged(selectedValue) {\n    this.actionButtons.filter = selectedValue;\n    this.settingsManager.actionButtonsSettingChanged(this.actionButtons);\n  }\n\n  orderReferenceDisplayChange(selectedValue) {\n    this.displayOrderReferenceOnOrderList = selectedValue;\n    this.settingsManager.setOrderReferenceDisplay(this.displayOrderReferenceOnOrderList);\n  }\n\n  displayProviderFooterSettingChanged(selectedValue) {\n    this.displayProviderFooter = selectedValue;\n    this.settingsManager.displayProviderFooterSettingChanged(this.displayProviderFooter);\n  }\n\n  displayDelayCounterSettingChanged(selectedValue) {\n    this.displayDelayCounter = selectedValue;\n    this.settingsManager.displayDelayCounterSettingChanged(this.displayDelayCounter);\n  }\n}\n"]}