{"version":3,"sources":["./src/app/pages/order-history/order-history.module.ts","./src/app/pages/order-history/order-history.page.ts","./src/app/pages/order-history/order-history.page.html"],"names":[],"mappings":"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","file":"8-es2015.0552168bbd4609e8ae5b.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport {RouterModule} from '@angular/router';\nimport {Routes} from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\n\nimport { OrderHistoryPage } from './order-history.page';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {ComponentsModule} from '@app/components/components.module';\nimport {PipesModule} from '@app/pipes/pipes.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrderHistoryPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    TranslateModule,\n    ComponentsModule,\n    PipesModule,\n  ],\n  declarations: [OrderHistoryPage]\n})\nexport class OrderHistoryPageModule {}\n","import {ViewChild} from '@angular/core';\nimport {Component} from '@angular/core';\nimport {Hauler} from '@models/business/hauler.model';\nimport {Order} from '@models/business/order.model';\nimport {OrderGroup} from '@models/order-helper/order-group.model';\nimport {OrderView} from '@models/order-helper/order-view.model';\nimport {UserSettings} from '@models/settings/settings.model';\nimport {DateTimeCombinationEnum} from '@models/units-and-format/date-format.enum';\nimport {OrderDetailTabsPage} from '@app/pages/order-detail-tabs/order-detail-tabs.page';\nimport {DatePipe} from '@app/pipes/date-pipe/date.pipe';\nimport {LoadingController} from '@ionic/angular';\nimport {ModalController} from '@ionic/angular';\nimport {IonDatetime} from '@ionic/angular';\nimport {Transition} from '@models/workflow/transition.model';\nimport {MblsAnalyticsService} from '@services/mbls-analytics-service/MblsAnalyticsService';\nimport {LogService} from '@services/log/log.service';\nimport {MobileContextService} from '@services/mobile-configuration-service/mobile-context.service';\nimport {OrderService} from '@services/order-service/order.service';\nimport {OrderSyncService} from '@services/order-sync/order-sync.service';\nimport * as moment from 'moment';\nimport {Subject} from 'rxjs';\nimport {combineLatest} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\n\nconst CONFIG = {\n  GA: {\n    PAGE_NAME: 'OrderHistoryPage',\n  }\n};\n\n@Component({\n  selector: 'app-order-history',\n  templateUrl: './order-history.page.html',\n  styleUrls: ['./order-history.page.scss'],\n})\nexport class OrderHistoryPage {\n\n  @ViewChild('datePicker', {static: true})\n  public datePicker: IonDatetime;\n  public allOrders: Array<OrderView> = [];\n  public hauler: Hauler;\n  public orderGroups: Array<OrderGroup> = [];\n  public activeOrders: Array<OrderView> = [];\n  public deliveryDate: string = moment().format('YYYY-MM-DD');\n  public daysInThePast = 0;\n  public minDate: string = moment().subtract(this.daysInThePast, 'd').format('YYYY-MM-DD');\n  public maxDate: string = moment().add(365, 'd').format('YYYY-MM-DD');\n  protected _component: OrderHistoryPage;\n  private loading: any;\n  userSettings: UserSettings = new UserSettings();\n  private unsubscribe: Subject<void> = new Subject<void>();\n  public displayFormat: string = moment().format('YYYY-MM-DD');\n  public datePickerDisplayFormat = 'YYYY/MM/DD';\n  dateType: DateTimeCombinationEnum = DateTimeCombinationEnum.dateOnly;\n  datePickerType = true;\n\n  constructor(private modalCtrl: ModalController,\n              private orderService: OrderService,\n              private loadingCtrl: LoadingController,\n              private orderSyncService: OrderSyncService,\n              private log: LogService,\n              private mobileContextService: MobileContextService,\n              private ga: MblsAnalyticsService,\n              private datePipe: DatePipe,\n  ) {\n    this.orderSyncService.sendPaymentUpdate().subscribe(orderChange => {\n      if (orderChange as Order) {\n        const orderView = this.activeOrders.find(oV => oV.order.id === orderChange.id);\n        if (orderView) {\n          orderChange.uuid = orderView.order.uuid;\n          orderView.order = orderChange;\n        }\n      }\n    });\n\n    this.mobileContextService.userSettingsObservable\n      .pipe(\n        takeUntil(this.unsubscribe)\n      )\n      .subscribe((userSettings) => {\n        this.userSettings = userSettings;\n      });\n  }\n\n  // noinspection JSUnusedGlobalSymbols\n  ionViewDidEnter() {\n    this.ga.trackView(CONFIG.GA.PAGE_NAME).catch(error => this.log.info(`Unable to track view ${CONFIG.GA.PAGE_NAME} with GA`, error));\n    this.getOrders(this.deliveryDate);\n  }\n\n  /***\n   * get orders by their delivery dates\n   */\n  getOrders(deliveryDate: string) {\n    this.loading = this.loadingCtrl.create()\n      .then(async (res) => {\n          await res.present();\n          combineLatest([\n            this.orderSyncService.getDatedOrders(moment(deliveryDate).format('YYYY-MM-DD')),\n            this.mobileContextService.haulerObservable\n          ])\n            .subscribe(([orders, hauler]) => {\n                this.allOrders = [];\n                this.orderGroups = [];\n                this.activeOrders = [];\n                orders.forEach(order => {\n                  this.allOrders.push(this.orderService.constructOrderView(order));\n                });\n                this.hauler = hauler;\n                this.activeOrders = this.sortOrders(this.allOrders, 'tenantName');\n                this.manageGroups(this.allOrders);\n                this.canHaulerSeeFutureOrder();\n                res.dismiss();\n              }, err => {\n                res.dismiss();\n                this.log.error(err);\n              }\n            );\n        }\n      );\n  }\n\n  showGroupHeader = (record: OrderView, recordIndex: number, records: Array<OrderView>) => {\n    try {\n      if (recordIndex === 0 || (record.order.tenantName !== records[recordIndex - 1].order.tenantName)) {\n        if (this.orderGroups) {\n          const group = this.orderGroups.find(value => value.name === record.order.tenantName);\n          if (group) {\n            return group;\n          }\n        }\n      }\n    } catch (e) {\n\n    }\n\n    return null;\n  }\n\n  identify(index, orderView: OrderView) {\n    return orderView.order.uuid.toString();\n  }\n\n  toggleGroupView(groupName: string) {\n    const orderGroup = this.orderGroups.find(oG => oG.name === groupName);\n    if (orderGroup) {\n      if (orderGroup.hidden) {\n        this.activeOrders = this.activeOrders.filter(orderView => orderView.order.tenantName !== groupName);\n      } else {\n        this.activeOrders = this.activeOrders.concat(this.allOrders.filter(orderView => orderView.order.tenantName === groupName));\n      }\n      orderGroup.hidden = !orderGroup.hidden;\n      orderGroup.visible = !orderGroup.visible;\n    }\n  }\n\n  showTimePicker() {\n    this.datePicker.open();\n  }\n\n  async selectItem(event, orderView) {\n    const itemModal = await this.modalCtrl.create({\n      id: 'order-detail-tabs-page',\n      component: OrderDetailTabsPage,\n      componentProps: {\n        orderView: orderView,\n        isforHistory: true\n      }\n    });\n    itemModal.present();\n    itemModal.onDidDismiss().then(\n      // (data: { order: Order }) => {\n      (eventDetail) => {\n        if (eventDetail && eventDetail.data && eventDetail.data.order) {\n          const transition: Transition = eventDetail.data.transition;\n          const view = this.allOrders.find(oV => oV.order.id === eventDetail.data.order.id);\n          if (view && transition) {\n            view.order.local = false;\n            view.order.status = transition.to.name;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Sort orders\n   *\n   */\n  sortOrders(orders: Array<OrderView>, prop: string): Array<OrderView> {\n    const result = [];\n    const ordersSorted = orders.reduce((groups, item) => {\n      const val = item.order[prop];\n      groups[val] = groups[val] || [];\n      groups[val].push(item);\n      return groups;\n    }, {});\n    Object.keys(ordersSorted).forEach(item => {\n        result.push(...ordersSorted[item]);\n      }\n    );\n    return result;\n  }\n\n  canHaulerSeeFutureOrder() {\n    if (this.hauler) {\n      this.orderGroups.forEach(orderGroup => {\n        const provider = this.hauler.linkedProviders.find(p => p.name === orderGroup.name);\n        const canSeeFutureOrders = !moment(this.deliveryDate).isAfter(moment()) ||\n          (provider.configuration && provider.configuration.allowFutureViewForHauler);\n        orderGroup.canHaulerSeeFutureOrders = canSeeFutureOrders;\n\n        orderGroup.hidden = !canSeeFutureOrders;\n        if (!canSeeFutureOrders) {\n          this.toggleGroupView(orderGroup.name);\n        }\n      });\n    }\n  }\n\n  isDatePickerVisible() {\n    if (this.hauler) {\n      return this.hauler.linkedProviders.some(provider => provider.configuration.allowFutureViewForHauler);\n    }\n  }\n\n  private manageGroups(orders: Array<OrderView>) {\n    if (this.hauler) {\n      this.hauler.linkedProviders.forEach(provider => {\n        const orderGroup = new OrderGroup(provider.name);\n        this.orderGroups.push(orderGroup);\n      });\n      orders.forEach(orderView => {\n        const orderGroup = this.orderGroups.find(oG => oG.name === orderView.order.tenantName);\n        if (orderGroup) {\n          orderGroup.orders.push(orderView);\n        }\n      });\n    }\n  }\n\n  changeDisplayFormat(deliveryDate) {\n    this.displayFormat = this.datePipe.transform(deliveryDate, this.userSettings.hourFormat, this.userSettings.dateFormat, this.dateType);\n  }\n\n  ionViewDidLeave() {\n    this.unsubscribe.next();\n  }\n\n  ionViewWillUnload() {\n    this.unsubscribe.complete();\n  }\n}\n","<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-menu-button>\n        <img src=\"assets/images/logo_menu.png\"/>\n      </ion-menu-button>\n    </ion-buttons>\n    <ion-title\n      class=\"delivery-date\">{{ displayFormat | DatePipe: userSettings.hourFormat:userSettings.dateFormat:dateType}}</ion-title>\n    <ion-buttons slot=\"end\">\n      <ion-button slot=\"icon-only\" (click)=\"getOrders(deliveryDate)\">\n        <fa-icon [icon]=\"['fas', 'sync']\" size=\"lg\" slot=\"end\"></fa-icon>\n      </ion-button>\n      <ion-button *ngIf=\"isDatePickerVisible()\" slot=\"icon-only\" (click)=\"showTimePicker()\">\n        <fa-icon [icon]=\"['fal', 'calendar']\" size=\"lg\"></fa-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-datetime\n    [cancelText]=\"'actions.cancel' | translate\" [doneText]=\"'actions.accept' | translate\"\n    #datePicker [min]=\"minDate\" [max]=\"maxDate\"\n    [displayFormat]=\"datePickerDisplayFormat | DatePipe:userSettings.hourFormat:userSettings.dateFormat:null:datePickerType:true\"\n    [(ngModel)]=\"deliveryDate\" (ngModelChange)=\"changeDisplayFormat(deliveryDate)\" (ionChange)=\"getOrders(deliveryDate)\"\n    hidden>\n  </ion-datetime>\n  <ion-virtual-scroll #itemList [items]=\"activeOrders\" [trackBy]=\"identify\" [headerFn]=\"showGroupHeader\"\n                      [approxItemHeight]=\"'76px'\" bufferRatio=\"6\">\n    <ion-item-divider *virtualHeader=\"let group\" class=\"item-ios-with-padding group-item-divider\"\n                      [ngClass]=\"group.viewClass\">\n      <ion-label>\n        <ion-badge color=\"primary\">{{ group.size }}</ion-badge>&nbsp;\n        <span [translate]=\"group.name\"></span>\n      </ion-label>\n\n      <ion-toggle slot=\"end\" [(ngModel)]=\"group.visible\" (ngModelChange)=\"toggleGroupView(group.name)\"></ion-toggle>\n    </ion-item-divider>\n    <ion-item *virtualItem=\"let orderItem; let i = index\" (click)=\"selectItem($event, orderItem)\"\n              class=\"item-no-padding ion-text-wrap\">\n      <order-item class=\"order-item-fill\"  [orderView]=\"orderItem\" [index]=\"i\" [isforHistory]=\"true\"></order-item>\n    </ion-item>\n  </ion-virtual-scroll>\n  <ion-item-group *ngIf=\"(!activeOrders || activeOrders.length < 1)\"\n                  class=\"italic text-muted ion-padding\">\n    <ion-item lines=\"none\">\n      <ion-label class=\"text-center\">{{ 'messages.empty_list' | translate }}</ion-label>\n    </ion-item>\n  </ion-item-group>\n  <!-- barre pour permettre de réafficher un groupe -->\n  <ion-list>\n    <ion-item-divider *ngFor=\"let hiddenGroup of orderGroups\" [hidden]=\"!hiddenGroup.hidden\"\n                      class=\"item-ios-with-padding group-item-divider\" [ngClass]=\"hiddenGroup.viewClass\">\n      <ion-label>\n        <ion-badge *ngIf=\"hiddenGroup.canHaulerSeeFutureOrders\" color=\"primary\">{{ hiddenGroup.size }}</ion-badge>\n        <span [translate]=\"hiddenGroup.name\"></span> &nbsp;\n        <span class=\"future-order-not-allowed-message\" *ngIf=\"!hiddenGroup.canHaulerSeeFutureOrders\"\n              [translate]=\"'messages.not_allowed_to_see_future_orders'\"></span>\n      </ion-label>\n      <ion-toggle *ngIf=\"hiddenGroup.canHaulerSeeFutureOrders\" [(ngModel)]=\"hiddenGroup.visible\"\n                  (ngModelChange)=\"toggleGroupView(hiddenGroup.name)\"></ion-toggle>\n    </ion-item-divider>\n  </ion-list>\n\n</ion-content>\n"],"sourceRoot":"webpack:///"}